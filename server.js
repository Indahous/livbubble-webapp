// server.js
const express = require('express');
const fs = require('fs').promises;
const path = require('path');
const app = express();

// üîê –ü–∞—Ä–æ–ª—å –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (–Ω–µ –≤ –∫–æ–¥–µ!)
require('dotenv').config();
const ADMIN_PASSWORD = process.env.ADMIN_PASSWORD;

if (!ADMIN_PASSWORD) {
  console.error('‚ùå –û—à–∏–±–∫–∞: ADMIN_PASSWORD –Ω–µ –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  process.exit(1);
}

console.log('‚úÖ ADMIN_PASSWORD —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.');

// Middleware
app.use(express.json());
app.use(express.static('.'));

// –†–æ—É—Ç—ã

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞
app.get('/admin/', (req, res) => {
  res.sendFile(path.join(__dirname, 'admin/index.html'));
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
app.post('/check-password', (req, res) => {
  const { password } = req.body;
  if (!password) {
    return res.status(400).json({ success: false, message: '–ü–∞—Ä–æ–ª—å –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω' });
  }
  if (password === ADMIN_PASSWORD) {
    return res.json({ success: true });
  }
  res.status(401).json({ success: false, message: '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å' });
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–¥–∞–Ω–∏–π
app.get('/tasks.json', async (req, res) => {
  try {
    const data = await fs.readFile('tasks.json', 'utf8');
    res.json(JSON.parse(data));
  } catch (err) {
    console.warn('‚ö†Ô∏è tasks.json –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫');
    res.json({ priority_tasks: [] });
  }
});

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π
app.post('/save-tasks', async (req, res) => {
  const { password, priority_tasks } = req.body;
  if (!password || password !== ADMIN_PASSWORD) {
    return res.status(401).json({ success: false, message: '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å' });
  }
  try {
    await fs.writeFile('tasks.json', JSON.stringify({ priority_tasks }, null, 2));
    console.log('‚úÖ –ó–∞–¥–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
    res.json({ success: true, message: '–ó–∞–¥–∞–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!' });
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', err);
    res.status(500).json({ success: false, message: '–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è' });
  }
});

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
app.use('/admin-panel', express.static(path.join(__dirname, 'admin-panel')));

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'index.html'));
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const PORT = process.env.PORT || 8080;
app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
