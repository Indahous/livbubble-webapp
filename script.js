// script.js

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let tasks = [];
let completedTasks = 0;
let bubblesPopped = 0;

// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const bubblesContainer = document.getElementById('bubbles');
const completeButton = document.getElementById('complete');
const taskModal = document.getElementById('task-modal');
const taskTitle = document.getElementById('task-title');
const taskContent = document.getElementById('task-content');
const modalCloseButton = document.querySelector('#task-modal button');

// –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–¥–∞–Ω–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞
async function loadTasks() {
  try {
    const response = await fetch('/tasks.json');
    if (!response.ok) throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å tasks.json');
    const data = await response.json();
    tasks = data.priority_tasks || [];
    console.log('‚úÖ –ó–∞–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', tasks);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–¥–∞–Ω–∏–π:', error);
    // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏: –ø–æ–¥—Å—Ç–∞–≤–∏–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è, –µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
    tasks = [
      {
        id: 1,
        type: 'subscribe',
        title: '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª',
        link: 'https://t.me/livbubble'
      },
      {
        id: 2,
        type: 'question',
        title: '–ö—Ç–æ –Ω–∞–ø–∏—Å–∞–ª "–í–æ–π–Ω—É –∏ –º–∏—Ä"?',
        correct_answer: '–¢–æ–ª—Å—Ç–æ–π',
        case_sensitive: false
      }
    ];
  }
}

// –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∑–∞–¥–∞–Ω–∏–µ–º
function showTaskModal(task) {
  taskTitle.textContent = task.title;
  taskContent.innerHTML = '';

  if (task.type === 'subscribe' || task.type === 'buy') {
    const link = document.createElement('a');
    link.href = task.link;
    link.target = '_blank';
    link.textContent = '–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–¥–∞–Ω–∏—é';
    link.className = 'task-btn';
    taskContent.appendChild(link);
  }

  if (task.type === 'question') {
    const input = document.createElement('input');
    input.type = 'text';
    input.id = 'answer-input';
    input.placeholder = '–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç';
    input.className = 'task-input';
    taskContent.appendChild(input);

    const submitBtn = document.createElement('button');
    submitBtn.textContent = '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å';
    submitBtn.className = 'task-btn';
    submitBtn.onclick = () => {
      const userAnswer = input.value.trim();
      const correctAnswer = task.correct_answer.trim();
      const isCorrect = task.case_sensitive
        ? userAnswer === correctAnswer
        : userAnswer.toLowerCase() === correctAnswer.toLowerCase();

      if (isCorrect) {
        alert('‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ.');
        closeTaskModal();
        completedTasks++;
        checkGameCompletion();
      } else {
        alert('‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.');
      }
    };
    taskContent.appendChild(submitBtn);
  }

  taskModal.style.display = 'block';
}

// –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
function closeTaskModal() {
  taskModal.style.display = 'none';
  const input = document.getElementById('answer-input');
  if (input) input.value = '';
}

// –õ–æ–ø–Ω—É—Ç—å –ø—É–∑—ã—Ä—å
function popBubble(bubble) {
  if (bubble.classList.contains('popped')) return;
  bubble.classList.add('popped');
  bubblesPopped++;

  // –ï—Å–ª–∏ –µ—â—ë –Ω–µ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ
  if (completedTasks < tasks.length && tasks[completedTasks]) {
    showTaskModal(tasks[completedTasks]);
    completedTasks++;
    checkGameCompletion();
  }

  // –í–∏–±—Ä–∞—Ü–∏—è (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
  if ('vibrate' in navigator) {
    navigator.vibrate(100);
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã
function checkGameCompletion() {
  if (completedTasks >= 5) {
    setTimeout(() => {
      completeButton.style.display = 'block';
    }, 1000);
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã
completeButton.addEventListener('click', () => {
  if (typeof Telegram !== 'undefined' && Telegram.WebApp) {
    Telegram.WebApp.sendData(JSON.stringify({
      game_completed: true,
      bubbles_popped: bubblesPopped,
      tasks_completed: completedTasks
    }));
  } else {
    console.log('üéÆ –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!', {
      bubbles_popped: bubblesPopped,
      tasks_completed: completedTasks
    });
    alert('–ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.');
  }
});

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—É–∑—ã—Ä–µ–π
function createBubbles() {
  for (let i = 0; i < 10; i++) {
    const bubble = document.createElement('div');
    bubble.className = 'bubble';
    bubble.innerHTML = 'ü´ß';

    // –°–ª—É—á–∞–π–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    const randomX = Math.random() * (window.innerWidth - 70);
    const randomY = Math.random() * (window.innerHeight - 70);

    bubble.style.left = `${randomX}px`;
    bubble.style.top = `${randomY}px`;

    bubble.addEventListener('click', () => popBubble(bubble));
    bubblesContainer.appendChild(bubble);
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
window.onload = async () => {
  await loadTasks();
  createBubbles();

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ Telegram WebApp –∑–∞–≥—Ä—É–∂–µ–Ω
  if (typeof Telegram !== 'undefined' && Telegram.WebApp) {
    Telegram.WebApp.ready();
    Telegram.WebApp.expand();
  }
};